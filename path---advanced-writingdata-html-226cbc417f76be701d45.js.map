{"version":3,"sources":["webpack:///path---advanced-writingdata-html-226cbc417f76be701d45.js","webpack:///./.cache/json/advanced-writingdata-html.json"],"names":["webpackJsonp","482","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","nextTitle","prevTitle","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,qqFACAC,aACAC,MAAA,2BACAC,KAAA,uBACAC,KAAA,kCACAC,UAAA,kBACAC,UAAA,sBAEAC,QACAC,KAAA,+BACAC,KAAA,+BAIAC,aACAD,KAAA","file":"path---advanced-writingdata-html-226cbc417f76be701d45.js","sourcesContent":["webpackJsonp([230576653708092],{\n\n/***/ 482:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Writing and updating data is a common operation that is triggered from app UIs.</p>\\n<p><a href=\\\"https://opensource.appbase.io/reactivesearch/\\\">ReactiveSearch</a> offers components for creating read based search UIs.</p>\\n<p>In this post, we will talk about a few ways to perform Create, Update and Delete operations on the data.</p>\\n<h2 id=\\\"appbase-js\\\"><a href=\\\"#appbase-js\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>appbase-js</h2>\\n<p><a href=\\\"https://github.com/appbaseio/appbase-js\\\"><code>appbase-js</code></a> is the javascript library from appbase.io that runs on Node.JS, UMD, React and React Native environments.</p>\\n<p>We recommend using appbase-js in a <a href=\\\"http://expressjs.com/en/guide/using-middleware.html\\\">Node.JS middleware</a> to perform the write operations.</p>\\n<blockquote>\\n<p>Note</p>\\n<p>It is important to perform write operations from a secure environment, as you don’t want to expose the write credentials publicly.</p>\\n</blockquote>\\n<h2 id=\\\"rest-api\\\"><a href=\\\"#rest-api\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>REST API</h2>\\n<p>If your middleware is written in a different language, you can easily use the REST API endpoints to write data into appbase.io or Elasticsearch. An example PUT endpoint for indexing a new (or overwriting an existing) document would look like:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-bash\\\"><code>curl -XPUT <span class=\\\"token variable\\\">$host</span>/<span class=\\\"token variable\\\">$app</span>/<span class=\\\"token variable\\\">$type</span>/<span class=\\\"token variable\\\">$doc_id</span> -d <span class=\\\"token string\\\">'{\\n   \\\"msg\\\": \\\"Hello from ReactiveSearch\\\",\\n   \\\"from\\\": \\\"A middleware server\\\"\\n}'</span>\\n</code></pre>\\n      </div>\\n<p>Full REST API is available at <a href=\\\"https://rest.appbase.io\\\">rest.appbase.io</a>.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Writing and Editing Data\",\n\t\t\t\t\t\"next\": \"advanced/guides.html\",\n\t\t\t\t\t\"prev\": \"advanced/reactivecomponent.html\",\n\t\t\t\t\t\"nextTitle\": \"Advanced Guides\",\n\t\t\t\t\t\"prevTitle\": \"Reactive Component\"\n\t\t\t\t},\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"path\": \"docs/advanced/WritingData.md\",\n\t\t\t\t\t\"slug\": \"advanced/writingdata.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"advanced/writingdata.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---advanced-writingdata-html-226cbc417f76be701d45.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Writing and updating data is a common operation that is triggered from app UIs.</p>\\n<p><a href=\\\"https://opensource.appbase.io/reactivesearch/\\\">ReactiveSearch</a> offers components for creating read based search UIs.</p>\\n<p>In this post, we will talk about a few ways to perform Create, Update and Delete operations on the data.</p>\\n<h2 id=\\\"appbase-js\\\"><a href=\\\"#appbase-js\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>appbase-js</h2>\\n<p><a href=\\\"https://github.com/appbaseio/appbase-js\\\"><code>appbase-js</code></a> is the javascript library from appbase.io that runs on Node.JS, UMD, React and React Native environments.</p>\\n<p>We recommend using appbase-js in a <a href=\\\"http://expressjs.com/en/guide/using-middleware.html\\\">Node.JS middleware</a> to perform the write operations.</p>\\n<blockquote>\\n<p>Note</p>\\n<p>It is important to perform write operations from a secure environment, as you don’t want to expose the write credentials publicly.</p>\\n</blockquote>\\n<h2 id=\\\"rest-api\\\"><a href=\\\"#rest-api\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>REST API</h2>\\n<p>If your middleware is written in a different language, you can easily use the REST API endpoints to write data into appbase.io or Elasticsearch. An example PUT endpoint for indexing a new (or overwriting an existing) document would look like:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-bash\\\"><code>curl -XPUT <span class=\\\"token variable\\\">$host</span>/<span class=\\\"token variable\\\">$app</span>/<span class=\\\"token variable\\\">$type</span>/<span class=\\\"token variable\\\">$doc_id</span> -d <span class=\\\"token string\\\">'{\\n   \\\"msg\\\": \\\"Hello from ReactiveSearch\\\",\\n   \\\"from\\\": \\\"A middleware server\\\"\\n}'</span>\\n</code></pre>\\n      </div>\\n<p>Full REST API is available at <a href=\\\"https://rest.appbase.io\\\">rest.appbase.io</a>.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Writing and Editing Data\",\n\t\t\t\t\"next\": \"advanced/guides.html\",\n\t\t\t\t\"prev\": \"advanced/reactivecomponent.html\",\n\t\t\t\t\"nextTitle\": \"Advanced Guides\",\n\t\t\t\t\"prevTitle\": \"Reactive Component\"\n\t\t\t},\n\t\t\t\"fields\": {\n\t\t\t\t\"path\": \"docs/advanced/WritingData.md\",\n\t\t\t\t\"slug\": \"advanced/writingdata.html\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"advanced/writingdata.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/advanced-writingdata-html.json\n// module id = 482\n// module chunks = 230576653708092"],"sourceRoot":""}