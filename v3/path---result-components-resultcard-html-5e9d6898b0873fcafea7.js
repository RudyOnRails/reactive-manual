webpackJsonp([39155803706777],{495:function(n,s){n.exports={data:{markdownRemark:{html:'<p><img src="https://i.imgur.com/KnrGoRk.png" alt="Image to be displayed"></p>\n<p><code class="gatsby-code-text">ResultCard</code> creates a result card UI component to display results in a card layout, suited for data that have an associated image.</p>\n<p>Example uses:</p>\n<ul>\n<li>showing e-commerce search results in a card layout.</li>\n<li>showing filtered hotel booking results in a card layout.</li>\n</ul>\n<blockquote>\n<p>Note</p>\n<p>An alternative layout to ResultCard is a <a href="/reactive-manual/v3/search-components/resultlist.html"><strong>ResultList</strong></a>, which displays result data in a list format.</p>\n</blockquote>\n<h2 id="usage"><a href="#usage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>\n<h3 id="basic-usage"><a href="#basic-usage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic Usage</h3>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResultCard</span>\n  <span class="token attr-name">react</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token string">"and"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"PriceFilter"</span><span class="token punctuation">,</span> <span class="token string">"SearchFilter"</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">componentId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SearchResult<span class="token punctuation">"</span></span>\n  <span class="token attr-name">renderData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderData<span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span></code></pre>\n      </div>\n<h3 id="pagination-usage-with-all-props"><a href="#pagination-usage-with-all-props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Pagination Usage With All Props</h3>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResultCard</span>\n  <span class="token attr-name">componentId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ResultCard01<span class="token punctuation">"</span></span>\n  <span class="token attr-name">dataField</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ratings<span class="token punctuation">"</span></span>\n  <span class="token attr-name">stream</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>  \n  <span class="token attr-name">sortBy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>desc<span class="token punctuation">"</span></span>\n  <span class="token attr-name">size</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">paginationAt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span>\n  <span class="token attr-name">pages</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">showResultStats</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">loader</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Loading Results..<span class="token punctuation">"</span></span>\n  <span class="token attr-name">react</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    and<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"PriceFilter"</span><span class="token punctuation">,</span> <span class="token string">"SearchFilter"</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">renderData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderData<span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span></code></pre>\n      </div>\n<h3 id="infinite-scroll-usage-with-all-props"><a href="#infinite-scroll-usage-with-all-props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Infinite Scroll Usage With All Props</h3>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResultCard</span>\n  <span class="token attr-name">componentId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ResultCard01<span class="token punctuation">"</span></span>\n  <span class="token attr-name">dataField</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ratings<span class="token punctuation">"</span></span>\n  <span class="token attr-name">stream</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>  \n  <span class="token attr-name">sortBy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>desc<span class="token punctuation">"</span></span>\n  <span class="token attr-name">size</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">showResultStats</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">loader</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Loading Results..<span class="token punctuation">"</span></span>\n  <span class="token attr-name">react</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    and<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"PriceFilter"</span><span class="token punctuation">,</span> <span class="token string">"SearchFilter"</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">renderData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderData<span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span></code></pre>\n      </div>\n<h2 id="props"><a href="#props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Props</h2>\n<ul>\n<li><strong>componentId</strong> <code class="gatsby-code-text">String</code><br>\nunique identifier of the component, can be referenced in other components’ <code class="gatsby-code-text">react</code> prop.</li>\n<li><strong>dataField</strong> <code class="gatsby-code-text">String</code><br>\ndata field to be mapped with <code class="gatsby-code-text">ResultCard</code>’s UI view, used for providing a sorting context.</li>\n<li><strong>excludeFields</strong> <code class="gatsby-code-text">String Array</code> [optional]<br>\nfields to be excluded in search results.</li>\n<li><strong>includeFields</strong> <code class="gatsby-code-text">String Array</code> [optional]<br>\nfields to be included in search results.</li>\n<li><strong>stream</strong> <code class="gatsby-code-text">Boolean</code> [optional]<br>\nwhether to stream new result updates in the UI. Defaults to <code class="gatsby-code-text">false</code>.</li>\n<li><strong>scrollTarget</strong> <code class="gatsby-code-text">String</code> [optional]<br>\naccepts <code class="gatsby-code-text">id</code> of the container you wish to apply infinite loading on. <strong>Note:</strong> The container should be scrollable.</li>\n<li><strong>pagination</strong> <code class="gatsby-code-text">Boolean</code> [optional]<br>\npagination &#x3C;> infinite scroll switcher. Defaults to <code class="gatsby-code-text">false</code>, i.e. an infinite scroll based view. When set to <code class="gatsby-code-text">true</code>, a pagination based list view with page numbers will appear.</li>\n<li><strong>paginationAt</strong> <code class="gatsby-code-text">String</code> [optional]<br>\nDetermines the position where to show the pagination, only applicable when <strong>pagination</strong> prop is set to <code class="gatsby-code-text">true</code>. Accepts one of <code class="gatsby-code-text">top</code>, <code class="gatsby-code-text">bottom</code> or <code class="gatsby-code-text">both</code> as valid values. Defaults to <code class="gatsby-code-text">bottom</code>.</li>\n<li><strong>pages</strong> <code class="gatsby-code-text">Number</code> [optional]<br>\nnumber of pages to show at a time, defaults to 5.</li>\n<li><strong>onPageChange</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\nexecutes when the current page is changed. If not defined, <code class="gatsby-code-text">window</code> will be scrolled to the top of the page.</li>\n<li><strong>onPageClick</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\naccepts a function which is invoked with the updated page value when a pagination button is clicked. For example if ‘Next’ is clicked with the current page number as ‘1’, you would receive the value ‘2’ as the function parameter.</li>\n</ul>\n<blockquote>\n<p>Note:</p>\n<p>The fundamental difference between <code class="gatsby-code-text">onPageChange</code> and <code class="gatsby-code-text">onPageClick</code> is that <code class="gatsby-code-text">onPageClick</code> is only called on a manual interaction with the pagination buttons, whereas, <code class="gatsby-code-text">onPageChange</code> would also be invoked if some other side effects caused the results to update which includes updating filters, queries or changing pages. The behaviour of these two may change in the future versions as we come up with a better API.</p>\n</blockquote>\n<ul>\n<li><strong>sortBy</strong> <code class="gatsby-code-text">String</code> [optional]<br>\nsort the results by either <code class="gatsby-code-text">asc</code> or <code class="gatsby-code-text">desc</code> order. It is an alternative to <code class="gatsby-code-text">sortOptions</code>, both can’t be used together.</li>\n<li>\n<p><strong>sortOptions</strong> <code class="gatsby-code-text">Object Array</code> [optional]<br>\nan alternative to the <code class="gatsby-code-text">sortBy</code> prop, <code class="gatsby-code-text">sortOptions</code> creates a sorting view in the ResultCard component’s UI. Each array element is an object that takes three keys:</p>\n<ul>\n<li><code class="gatsby-code-text">label</code> - label to be displayed in the UI.</li>\n<li><code class="gatsby-code-text">dataField</code> - data field to use for applying the sorting criteria on.</li>\n<li><code class="gatsby-code-text">sortBy</code> - specified as either <code class="gatsby-code-text">asc</code> or <code class="gatsby-code-text">desc</code>.</li>\n</ul>\n</li>\n<li><strong>size</strong> <code class="gatsby-code-text">Number</code> [optional]<br>\nnumber of results to show per view. Defaults to 20.</li>\n<li><strong>loader</strong> <code class="gatsby-code-text">String or JSX</code> [optional]<br>\ndisplay to show the user while the data is loading, accepts <code class="gatsby-code-text">String</code> or <code class="gatsby-code-text">JSX</code> markup.</li>\n<li><strong>showResultStats</strong> <code class="gatsby-code-text">Boolean</code> [optional]<br>\nwhether to show result stats in the form of results found and time taken. Defaults to <code class="gatsby-code-text">true</code>.</li>\n<li>\n<p><strong>onResultStats</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\nrenders custom result stats using a callback function that takes <code class="gatsby-code-text">stats</code> object as parameter and expects it to return a string or JSX. <code class="gatsby-code-text">stats</code> object contains following properties</p>\n<ul>\n<li><code class="gatsby-code-text">totalResults</code> - Total number of results found</li>\n<li><code class="gatsby-code-text">totalPages</code> - Total number of pages found based on current page size</li>\n<li><code class="gatsby-code-text">currentPage</code> - Current page number for which data is being rendered</li>\n<li><code class="gatsby-code-text">displayedResults</code> - Number of results displayed in current view</li>\n<li>\n<p><code class="gatsby-code-text">time</code> - Time taken to find total results</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx">onResultStats<span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token keyword">function</span><span class="token punctuation">(</span>stats<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token template-string"><span class="token string">`Showing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>stats<span class="token punctuation">.</span>displayedResults<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> of total </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>stats<span class="token punctuation">.</span>totalResults<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>stats<span class="token punctuation">.</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ms`</span></span>\n        <span class="token punctuation">)</span>   \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n</li>\n</ul>\n</li>\n<li><strong>URLParams</strong> <code class="gatsby-code-text">Boolean</code> [optional]<br>\nwhen set adds the current page number to the url. Only works when <code class="gatsby-code-text">pagination</code> is enabled.</li>\n<li>\n<p><strong>renderData</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\nreturns a card element object to be rendered based on the <code class="gatsby-code-text">res</code> data object. This callback function prop is called for each data item rendered in the <strong>ResultCard</strong> component’s view.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx">renderData<span class="token operator">=</span><span class="token punctuation">{</span>\n  <span class="token keyword">function</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      image<span class="token punctuation">:</span> res<span class="token punctuation">.</span>image<span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> res<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n      description<span class="token punctuation">:</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$<span class="token punctuation">{</span>res<span class="token punctuation">.</span>price<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>res<span class="token punctuation">.</span>room_type<span class="token punctuation">}</span> · <span class="token punctuation">{</span>res<span class="token punctuation">.</span>accommodates<span class="token punctuation">}</span> guests<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> res<span class="token punctuation">.</span>listing_url<span class="token punctuation">,</span>\n      containerProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        onMouseEnter<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'😁\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        onMouseLeave<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'🙀\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>The return format for the callback function is an object with <code class="gatsby-code-text">image</code>, <code class="gatsby-code-text">title</code>, <code class="gatsby-code-text">description</code> and <code class="gatsby-code-text">url</code> fields.</p>\n</li>\n<li><strong>defaultQuery</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\napplies a default query to the result component. This query will be run when no other components are being watched (via React prop), as well as in conjunction with the query generated from the React prop. The function should return a query.</li>\n<li><strong>onNoResults</strong> <code class="gatsby-code-text">String or JSX</code> [optional]<br>\nshow custom message or component when no results founds.</li>\n<li><strong>onError</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\ngets triggered in case of an error and provides the <code class="gatsby-code-text">error</code> object, which can be used for debugging or giving feedback to the user if needed.</li>\n<li>\n<p><strong>renderError</strong> <code class="gatsby-code-text">String or JSX or Function</code> [optional]\ncan be used to render an error message in case of any error.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx">renderError<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            Something went wrong<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>Error details<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token punctuation">{</span>error<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>onData</strong> <code class="gatsby-code-text">Function</code> [optional]\ngets triggered after data changes, which returns an object with these properties: <code class="gatsby-code-text">results</code>, <code class="gatsby-code-text">streamResults</code>, <code class="gatsby-code-text">loadMore</code>, <code class="gatsby-code-text">base</code> &#x26; <code class="gatsby-code-text">triggerClickAnalytics</code>.</p>\n<h2 id="demo"><a href="#demo" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Demo</h2>\n</li>\n</ul>\n<br />\n<iframe src="https://codesandbox.io/embed/github/appbaseio/reactivesearch/tree/next/packages/web/examples/ResultCard" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>\n<h2 id="styles"><a href="#styles" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Styles</h2>\n<p><code class="gatsby-code-text">ResultCard</code> component supports <code class="gatsby-code-text">innerClass</code> prop with the following keys:    </p>\n<ul>\n<li><code class="gatsby-code-text">resultsInfo</code></li>\n<li><code class="gatsby-code-text">sortOptions</code></li>\n<li><code class="gatsby-code-text">resultStats</code></li>\n<li><code class="gatsby-code-text">noResults</code></li>\n<li><code class="gatsby-code-text">button</code></li>\n<li><code class="gatsby-code-text">pagination</code></li>\n<li><code class="gatsby-code-text">list</code></li>\n<li><code class="gatsby-code-text">listItem</code></li>\n<li><code class="gatsby-code-text">image</code></li>\n<li><code class="gatsby-code-text">title</code></li>\n<li><code class="gatsby-code-text">poweredBy</code></li>\n</ul>\n<p>Read more about it <a href="/reactive-manual/v3/theming/class.html">here</a>.</p>\n<h2 id="extending"><a href="#extending" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Extending</h2>\n<p><code class="gatsby-code-text">ResultCard</code> component can be extended to</p>\n<ol>\n<li>customize the look and feel with <code class="gatsby-code-text">className</code>, <code class="gatsby-code-text">style</code>,</li>\n<li>render individual result data items using <code class="gatsby-code-text">renderData</code>,</li>\n<li>specify how results should be filtered using <code class="gatsby-code-text">react</code>.</li>\n<li>render the entire result data using  <code class="gatsby-code-text">renderAllData</code>.</li>\n<li>connect with external interfaces using <code class="gatsby-code-text">onQueryChange</code>.</li>\n</ol>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token operator">&lt;</span>ResultCard\n  <span class="token operator">...</span>\n  className<span class="token operator">=</span><span class="token string">"custom-class"</span>\n  <span class="token comment">// specify any number of custom styles.</span>\n  style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">"paddingBottom"</span><span class="token punctuation">:</span> <span class="token string">"10px"</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n  <span class="token comment">// register a callback function with the `renderData` prop.</span>\n  renderData<span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token keyword">function</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        image<span class="token punctuation">:</span> res<span class="token punctuation">.</span>image<span class="token punctuation">,</span>\n        title<span class="token punctuation">:</span> res<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n        url<span class="token punctuation">:</span> res<span class="token punctuation">.</span>listing_url\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  onQueryChange<span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token keyword">function</span><span class="token punctuation">(</span>prevQuery<span class="token punctuation">,</span> nextQuery<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// use the query with other js code</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'prevQuery\'</span><span class="token punctuation">,</span> prevQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'nextQuery\'</span><span class="token punctuation">,</span> nextQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// specify how and which results are filtered using `react` prop.</span>\n  react<span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token string">"and"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pricingFilter"</span><span class="token punctuation">,</span> <span class="token string">"dateFilter"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string">"or"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"searchFilter"</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token operator">/</span><span class="token operator">></span></code></pre>\n      </div>\n<ul>\n<li><strong>className</strong> <code class="gatsby-code-text">String</code><br>\nCSS class to be injected on the component container.</li>\n<li><strong>style</strong> <code class="gatsby-code-text">Object</code><br>\nCSS Styles to be applied to the <strong>ResultCard</strong> component.</li>\n<li><strong>renderData</strong> <code class="gatsby-code-text">Function</code> [optional]<br>\na callback function where user can define how to render the view based on the data changes. In <code class="gatsby-code-text">ResultCard</code>’s case, the expected return format is an object with <code class="gatsby-code-text">image</code>, <code class="gatsby-code-text">title</code>, <code class="gatsby-code-text">url</code> and <code class="gatsby-code-text">description</code> keys.</li>\n<li><strong>target</strong> <code class="gatsby-code-text">string</code> [optional]<br>\nThis prop is equivalent to the <code class="gatsby-code-text">target</code> attribute of html <code class="gatsby-code-text">a</code> tags. It is only valid when <code class="gatsby-code-text">url</code> key is present in <code class="gatsby-code-text">renderData()</code>’s returned object structure. It defaults to <code class="gatsby-code-text">_blank</code>.</li>\n<li>\n<p><strong>react</strong> <code class="gatsby-code-text">Object</code><br>\nspecify dependent components to reactively update <strong>ResultCard’s</strong> data view.</p>\n<ul>\n<li>\n<p><strong>key</strong> <code class="gatsby-code-text">String</code><br>\none of <code class="gatsby-code-text">and</code>, <code class="gatsby-code-text">or</code>, <code class="gatsby-code-text">not</code> defines the combining clause.</p>\n<ul>\n<li><strong>and</strong> clause implies that the results will be filtered by matches from <strong>all</strong> of the associated component states.</li>\n<li><strong>or</strong> clause implies that the results will be filtered by matches from <strong>at least one</strong> of the associated component states.</li>\n<li><strong>not</strong> clause implies that the results will be filtered by an <strong>inverse</strong> match of the associated component states.</li>\n</ul>\n</li>\n<li>\n<p><strong>value</strong> <code class="gatsby-code-text">String or Array or Object</code>  </p>\n<ul>\n<li><code class="gatsby-code-text">String</code> is used for specifying a single component by its <code class="gatsby-code-text">componentId</code>.</li>\n<li><code class="gatsby-code-text">Array</code> is used for specifying multiple components by their <code class="gatsby-code-text">componentId</code>.</li>\n<li><code class="gatsby-code-text">Object</code> is used for nesting other key clauses.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token function">renderAllData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     results<span class="token punctuation">,</span>\n     streamResults<span class="token punctuation">,</span>\n     loadMore<span class="token punctuation">,</span>\n     base<span class="token punctuation">,</span>\n     triggerClickAnalytics<span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// return the list to render</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<blockquote>\n<p>Note</p>\n<p>The <strong>callback</strong> function (<code class="gatsby-code-text">loadMore</code> here) will only be executed in case of infinite loading.</p>\n</blockquote>\n<ul>\n<li><strong>onQueryChange</strong> <code class="gatsby-code-text">Function</code><br>\nis a callback function which accepts component’s <strong>prevQuery</strong> and <strong>nextQuery</strong> as parameters. It is called everytime the component’s query changes. This prop is handy in cases where you want to generate a side-effect whenever the component’s query would change.</li>\n</ul>\n<h2 id="examples"><a href="#examples" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>\n<p>See more stories for ResultCard on playground.</p>\n<p><a href="https://opensource.appbase.io/playground/?selectedKind=Result%20components%2FResultCard" target="_blank">ResultCard with default props</a></p>',
frontmatter:{title:"ResultCard",next:"result-components/reactivelist.html",prev:"result-components/resultlist.html",nextTitle:"ReactiveList",prevTitle:"ResultList"},fields:{path:"docs/result-components/ResultCard",slug:"result-components/resultcard.html"}}},pathContext:{slug:"result-components/resultcard.html"}}}});
//# sourceMappingURL=path---result-components-resultcard-html-5e9d6898b0873fcafea7.js.map