webpackJsonp([0x9333beaa6d38],{489:function(a,e){a.exports={data:{markdownRemark:{html:'<p>The first step in getting started with building a custom project for <strong>ReactiveMaps</strong> or <strong>ReactiveSearch</strong> is to add your own data. In this guide, we explain how you can import your data with the correct schema.</p>\n<h3 id="creating-an-app"><a href="#creating-an-app" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating an App</h3>\n<p>ReactiveSearch uses Elasticsearch as its underlying database system. An app within ReactiveSearch’s context refers to an index in Elasticsearch.</p>\n<p>Here’s a short gif walking through the app creation process in appbase.io, a hosted realtime Elasticsearch service.</p>\n<p><img src="https://i.imgur.com/r6hWKAG.gif"></p>\n<p>If you are using an Elasticsearch cluster, you would be able to create an index with the following command:</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code>curl -XPUT elasticsearch:9200/my_app/\n</code></pre>\n      </div>\n<blockquote>\n<p>Note</p>\n<p>ReactiveSearch is compatible with Elasticsearch v2, v5 and v6.</p>\n</blockquote>\n<h3 id="overview-of-the-app-data-model"><a href="#overview-of-the-app-data-model" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview of the App Data Model</h3>\n<p>Elasticsearch’s data model is JSON based, and data within an app is organized as JSON objects that belong to a <strong>type</strong> (or not if you are using v6). Types provide a logical namespace to the JSON data which can be used while querying data. You can read more about the data model behind Elasticsearch over  <a href="https://www.elastic.co/blog/found-elasticsearch-mapping-introduction">here</a>.</p>\n<p><img src="https://i.imgur.com/LCvdVuu.png" alt="Data Store"></p>\n<blockquote>\n<p>Note</p>\n<p>Elasticsearch v6 removes the concepts of types, where data is simply stored as JSON objects within an index.</p>\n</blockquote>\n<h3 id="importing-custom-data"><a href="#importing-custom-data" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Importing Custom Data</h3>\n<p>In this section, we will cover how to add data using two popular approaches. We will use <a href="https://opensource.appbase.io/dejavu">Dejavu - a GUI for Elasticsearch</a> for showing the process.</p>\n<h4 id="csv-or-xls"><a href="#csv-or-xls" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CSV or XLS</h4>\n<p>Let’s say you have your data organized as a CSV or XLS file.</p>\n<ol>\n<li>Use an online tool like <a href="http://www.csvjson.com/csv2json">http://www.csvjson.com/csv2json</a> to convert your CSV data into a JSON format.</li>\n<li>Go to your dejavu’s <strong>Data Browser</strong> section and click “Add Data”.  </li>\n</ol>\n<p><img src="https://i.imgur.com/idp5Ia2.png"></p>\n<ol start="3">\n<li>Add the JSON formatted data here, a single object should be added as a JSON object while multiple records can be added using the Array semantics.</li>\n</ol>\n<blockquote>\n<p>Tip</p>\n<p>Add up to a hundred records at a time for best results. Ideal when your data set is small.</p>\n</blockquote>\n<h4 id="via-api"><a href="#via-api" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>via API</h4>\n<p>Elasticsearch uses a RESTful API for both indexing and retrieving data. Whether you are using Python or Java or Javascript, you make a HTTP API call there.</p>\n<p>This is how a REST call looks to insert a single object into an app inside a type called <strong>books</strong>.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code>curl -XPUT https://API_CREDENTIAL@scalr.api.appbase.io/<span class="token variable">$app</span>/books/1 --data-binary <span class="token string">\'{\n   "department_name": "Books",\n   "department_id": 1,\n   "name": "A Sample Book on Network Routing",\n   "price": 5595\n}\'</span>\n</code></pre>\n      </div>\n<p><code>scalr.api.appbase.io</code> is the domain for the Elasticsearch cluster, you can replace this with the location of your cluster domain.</p>\n<h3 id="data-mapping"><a href="#data-mapping" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Data Mapping</h3>\n<p>Data mapping is the process of specifying a schema for your data, which determines how it is indexed and stored. While Elasticsearch auto-detects the schema based on the kind of JSON value through a process known as dynamic mapping, it is also possible to set this mapping statically. You can read more about mappings over <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/mapping.html">here</a>.</p>\n<p>Dejavu provides a GUI for setting the mapping of a new field, as well as viewing existing mappings.</p>',frontmatter:{title:"Importing Data",next:"getting-started/reactivebase.html",prev:"getting-started/reactivesearch.html",nextTitle:"Base Component",prevTitle:"ReactiveSearch Quickstart"},fields:{path:"getting-started/Data.md",slug:"getting-started/data.html"}}},pathContext:{slug:"getting-started/data.html"}}}});
//# sourceMappingURL=path---getting-started-data-html-391ac2b6e2f4558540a5.js.map