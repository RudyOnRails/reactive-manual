webpackJsonp([41984078544437],{469:function(n,s){n.exports={data:{markdownRemark:{html:'<h3 id="step-0-create-boilerplate-with-cra"><a href="#step-0-create-boilerplate-with-cra" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Step 0: Create Boilerplate with CRA</h3>\n<p>In this section, we will create a search UI based on a <em>cars dataset</em> with ReactiveSearch components.</p>\n<p><img src="https://i.imgur.com/Zgp5lGk.png" alt="Image"></p>\n<p><strong>Caption:</strong> Final image of how the app will look.</p>\n<p>We can either add ReactiveSearch to an existing app or create a boilerplate app with <a href="https://github.com/facebookincubator/create-react-app">Create React App (CRA)</a>. For this quickstart guide, we will use the CRA.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code>create-react-app my-awesome-search <span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> my-awesome-search\n</code></pre>\n      </div>\n<h3 id="step-1-install-reactivesearch"><a href="#step-1-install-reactivesearch" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Step 1: Install ReactiveSearch</h3>\n<p>We will fetch and install <a href="https://www.npmjs.com/package/@appbaseio/reactivesearch"><code>reactivesearch</code></a> module using yarn or npm.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code>yarn add @appbaseio/reactivesearch\n</code></pre>\n      </div>\n<p>or</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @appbaseio/reactivesearch\n</code></pre>\n      </div>\n<hr>\n<h3 id="step-2-adding-the-first-component"><a href="#step-2-adding-the-first-component" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Step 2: Adding the first component</h3>\n<p>Lets add our first ReactiveSearch component: <a href="/reactive-manual/v3/getting-started/reactivebase.html">ReactiveBase</a>, it is a backend connector where we can configure the Elasticsearch index / authorization setup.</p>\n<p>We will demonstrate creating an index using <a href="https://appbase.io">appbase.io</a> service, although you can use any Elasticsearch backend within ReactiveBase.</p>\n<p><img src="https://i.imgur.com/r6hWKAG.gif" alt="create an appbase.io app"></p>\n<p><strong>Caption:</strong> For the example that we will build, the app is called <strong>car-store</strong> and the associated read-only credentials are <strong>cf7QByt5e:d2d60548-82a9-43cc-8b40-93cbbe75c34c</strong>. You can browse and clone the dataset into your own app from  <a href="https://opensource.appbase.io/dejavu/live/#?input_state=XQAAAAJrAAAAAAAAAAA9iIqnY-B2BnTZGEQz6wkFsta-jK5IyCHPDQHd0vFqnW3IIPckWf81EYz6c9_C1aGQkSbGptS4zcGd_lZI2UVGi7gEHVqkGAZzrbpw4o5m3TwqV4NeFg28vpiRpym93H_qNV7y_gPH___dHIAA">here</a>.</p>\n<p>We will update our <code>src/App.js</code> file to add ReactiveBase component.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveBase <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@appbaseio/reactivesearch\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n\n\t<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">(</span>\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReactiveBase</span>\n\t\t\t\t<span class="token attr-name">app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car-store<span class="token punctuation">"</span></span>\n\t\t\t\t<span class="token attr-name">credentials</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cf7QByt5e:d2d60548-82a9-43cc-8b40-93cbbe75c34c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\t\t\t\t<span class="token comment">// other components will go here.</span>\n\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n\t\t\t\t\tHello ReactiveSearch<span class="token operator">!</span>\n\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ReactiveBase</span><span class="token punctuation">></span></span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>This is how the app should look after running the <code>yarn start</code> command.</p>\n<p><img src="https://i.imgur.com/M7AAhTh.png"></p>\n<hr>\n<h3 id="step-3-adding-filters-and-result-components"><a href="#step-3-adding-filters-and-result-components" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Step 3: Adding Filters and Result Components</h3>\n<p>For this app, we will be using <a href="/reactive-manual/v3/search-components/categorysearch.html">CategorySearch</a> and <a href="/reactive-manual/v3/basic-components/singlerange.html">SingleRange</a> components for filtering the dataset. And <a href="/reactive-manual/v3/search-components/resultcard.html">ResultCard</a> component for showing the search results.</p>\n<p>Lets add them within the ReactiveBase component. But before we do that, we will look at the important props for each.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CategorySearch</span>\n\t<span class="token attr-name">componentId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchbox<span class="token punctuation">"</span></span>\n\t<span class="token attr-name">dataField</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n\t<span class="token attr-name">categoryField</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>brand.raw<span class="token punctuation">"</span></span>\n\t<span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search for cars<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>The <a href="/reactive-manual/v3/search-components/categorysearch.html"><strong>CategorySearch</strong></a> component we describe above creates a searchbox UI component that queries on the <code>name</code> field in the dataset and shows categorizations using the <code>brand.raw</code> field in the dataset. Here is how it will look visually.</p>\n<p><code>Note:</code> If you cloned your own dataset, the field will be called <code>brand.keyword</code> instead of <code>brand.raw</code>.</p>\n<p><img src="https://i.imgur.com/lPLu1qj.png"></p>\n<p>Next, we will look at the <a href="/reactive-manual/v3/basic-components/singlerange.html"><strong>SingleRange</strong></a> component for creating a ratings based filter.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code><span class="token operator">&lt;</span>SingleRange\n\tcomponentId<span class="token operator">=</span><span class="token string">"ratingsfilter"</span>\n\tdataField<span class="token operator">=</span><span class="token string">"rating"</span>\n\ttitle<span class="token operator">=</span><span class="token string">"Filter by ratings"</span>\n\tdata<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"4 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"3 stars and up"</span><span class="token punctuation">}</span>\n\t<span class="token punctuation">]</span><span class="token punctuation">}</span>\n\tdefaultSelected<span class="token operator">=</span><span class="token string">"4 stars and up"</span>\n<span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p><img src="https://i.imgur.com/vkqAHac.png"></p>\n<p><strong>SingleRange</strong> filters the DB by <code>rating</code> field based on the UI choice the user makes. We also set the <em>4 stars and up</em> option to be default selected when the UI loads up first.</p>\n<p>Finally, we need a component to show the matching results. <a href="/reactive-manual/v3/search-components/resultcard.html"><strong>ResultCard</strong></a> does exactly this.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code><span class="token operator">&lt;</span>ResultCard\n\tcomponentId<span class="token operator">=</span><span class="token string">"results"</span>\n\tdataField<span class="token operator">=</span><span class="token string">"name"</span>\n\tsize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">}</span>\n\tpagination<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>\n\treact<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n\t\tand<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"searchbox"</span><span class="token punctuation">,</span> <span class="token string">"ratingsfilter"</span><span class="token punctuation">]</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\tonData<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">{</span>\n\t\t\timage<span class="token punctuation">:</span> <span class="token string">\'http://www.asfera.info/files/images/1_aprela/4/deloreyn.jpg\'</span><span class="token punctuation">,</span>\n\t\t\ttitle<span class="token punctuation">:</span> res<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n\t\t\tdescription<span class="token punctuation">:</span> res<span class="token punctuation">.</span>brand <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token string">"*"</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>rating<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p>The <code>react</code> prop here specifies that it should construct a query based on the current selected values of searchbox and ratingsfilter components. Every time the user changes the input value, a new query is fired — you don’t need to write a manual query for any of the UI components here, although you can override it via <code>customQuery</code> prop.  </p>\n<p><img src="https://i.imgur.com/J1MXsWK.png"></p>\n<p>This is how the ResultCard component’s UI would look like.</p>\n<p>Now, we will put all three components together to create the UI view.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveBase<span class="token punctuation">,</span> CategorySearch<span class="token punctuation">,</span> SingleRange<span class="token punctuation">,</span> ResultCard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@appbaseio/reactivesearch\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n\t<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">(</span>\n\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReactiveBase</span>\n\t\t\t\t<span class="token attr-name">app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car-store<span class="token punctuation">"</span></span>\n\t\t\t\t<span class="token attr-name">credentials</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cf7QByt5e:d2d60548-82a9-43cc-8b40-93cbbe75c34c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\t\t\t\t\t<span class="token operator">&lt;</span>CategorySearch\n\t\t\t\t\t\tcomponentId<span class="token operator">=</span><span class="token string">"searchbox"</span>\n\t\t\t\t\t\tdataField<span class="token operator">=</span><span class="token string">"name"</span>\n\t\t\t\t\t\tcategoryField<span class="token operator">=</span><span class="token string">"brand.raw"</span> <span class="token comment">// use "brand.keyword" for newly cloned datasets</span>\n\t\t\t\t\t\tplaceholder<span class="token operator">=</span><span class="token string">"Search for cars"</span>\n\t\t\t\t\t<span class="token operator">/</span><span class="token operator">></span>\n\t\t\t\t\t<span class="token operator">&lt;</span>SingleRange\n\t\t\t\t\t\tcomponentId<span class="token operator">=</span><span class="token string">"ratingsfilter"</span>\n\t\t\t\t\t\ttitle<span class="token operator">=</span><span class="token string">"Filter by ratings"</span>\n\t\t\t\t\t\tdataField<span class="token operator">=</span><span class="token string">"rating"</span>\n\t\t\t\t\t\tdata<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"4 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"3 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"2 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"see all ratings"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t<span class="token punctuation">]</span><span class="token punctuation">}</span>\n\t\t\t\t\t\tdefaultSelected<span class="token operator">=</span><span class="token string">"4 stars and up"</span>\n\t\t\t\t\t<span class="token operator">/</span><span class="token operator">></span>\n\t\t\t\t\t<span class="token operator">&lt;</span>ResultCard\n\t\t\t\t\t\tcomponentId<span class="token operator">=</span><span class="token string">"result"</span>\n\t\t\t\t\t\ttitle<span class="token operator">=</span><span class="token string">"Results"</span>\n\t\t\t\t\t\tdataField<span class="token operator">=</span><span class="token string">"name"</span>\n\t\t\t\t\t\t<span class="token keyword">from</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span>\n\t\t\t\t\t\tsize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span>\n\t\t\t\t\t\tpagination<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>\n\t\t\t\t\t\treact<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n\t\t\t\t\t\t\tand<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"searchbox"</span><span class="token punctuation">,</span> <span class="token string">"ratingsfilter"</span><span class="token punctuation">]</span>\n\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t\tonData<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t\t<span class="token keyword">return</span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\timage<span class="token punctuation">:</span> <span class="token string">"https://bit.do/demoimg"</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\ttitle<span class="token punctuation">:</span> res<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\tdescription<span class="token punctuation">:</span> res<span class="token punctuation">.</span>brand <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token string">"★"</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>rating<span class="token punctuation">)</span>\n\t\t\t\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t<span class="token operator">/</span><span class="token operator">></span>\n\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ReactiveBase</span><span class="token punctuation">></span></span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>If you have followed along so far, you should a screen similar to:  </p>\n<p><img src="https://i.imgur.com/C1W8OGQ.png" alt="Image"></p>\n<p>We have built our entire search UI in just 50 lines!</p>\n<p>The only thing missing at this point is the layout, ReactiveSearch doesn’t use a layout system internally. For example, if you are using a grid from Bootstrap or Materialize, you can use that to style the layout. Or if you prefer to use Flex, you can use that.</p>\n<hr>\n<h3 id="step-4-adding-a-layout-grid-with-flex"><a href="#step-4-adding-a-layout-grid-with-flex" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Step 4: Adding a Layout Grid with Flex</h3>\n<p>For this quickstart, we will use a Flex based layout. If you are new to Flex, I recommend a quick read of <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">this article</a>.</p>\n<p>With ~16 more lines of inline styles, here is our final app layout.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactiveBase<span class="token punctuation">,</span> CategorySearch<span class="token punctuation">,</span> SingleRange<span class="token punctuation">,</span> ResultCard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@appbaseio/reactivesearch\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n\t<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">(</span>\n\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReactiveBase</span>\n\t\t\t\t<span class="token attr-name">app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>car-store<span class="token punctuation">"</span></span>\n\t\t\t\t<span class="token attr-name">credentials</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cf7QByt5e:d2d60548-82a9-43cc-8b40-93cbbe75c34c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\t\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">"flex"</span><span class="token punctuation">,</span> flexDirection<span class="token punctuation">:</span> <span class="token string">"row"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n\t\t\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">"flex"</span><span class="token punctuation">,</span> flexDirection<span class="token punctuation">:</span> <span class="token string">"column"</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token string">"40%"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n\t\t\t\t\t\t\t<span class="token operator">&lt;</span>CategorySearch\n\t\t\t\t\t\t\t\tcomponentId<span class="token operator">=</span><span class="token string">"searchbox"</span>\n\t\t\t\t\t\t\t\tdataField<span class="token operator">=</span><span class="token string">"name"</span>\n\t\t\t\t\t\t\t\tcategoryField<span class="token operator">=</span><span class="token string">"brand.raw"</span> <span class="token comment">// use "brand.keyword" for new datasets</span>\n\t\t\t\t\t\t\t\tplaceholder<span class="token operator">=</span><span class="token string">"Search for cars"</span>\n\t\t\t\t\t\t\t\tstyle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\t\tpadding<span class="token punctuation">:</span> <span class="token string">"5px"</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\tmarginTop<span class="token punctuation">:</span> <span class="token string">"10px"</span>\n\t\t\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\t<span class="token operator">/</span><span class="token operator">></span>\n\t\t\t\t\t\t\t<span class="token operator">&lt;</span>SingleRange\n\t\t\t\t\t\t\t\tcomponentId<span class="token operator">=</span><span class="token string">"ratingsfilter"</span>\n\t\t\t\t\t\t\t\ttitle<span class="token operator">=</span><span class="token string">"Filter by ratings"</span>\n\t\t\t\t\t\t\t\tdataField<span class="token operator">=</span><span class="token string">"rating"</span>\n\t\t\t\t\t\t\t\tdata<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n\t\t\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"4 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"3 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"2 stars and up"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\t<span class="token punctuation">{</span><span class="token string">"start"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"see all ratings"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t<span class="token punctuation">]</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\t\tdefaultSelected<span class="token operator">=</span><span class="token string">"4 stars and up"</span>\n\t\t\t\t\t\t\t\tstyle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\t\tpadding<span class="token punctuation">:</span> <span class="token string">"5px"</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\tmarginTop<span class="token punctuation">:</span> <span class="token string">"10px"</span>\n\t\t\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\t<span class="token operator">/</span><span class="token operator">></span>\n\t\t\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\t\t\t\t\t\t<span class="token operator">&lt;</span>ResultCard\n\t\t\t\t\t\t\tcomponentId<span class="token operator">=</span><span class="token string">"result"</span>\n\t\t\t\t\t\t\ttitle<span class="token operator">=</span><span class="token string">"Results"</span>\n\t\t\t\t\t\t\tdataField<span class="token operator">=</span><span class="token string">"name"</span>\n\t\t\t\t\t\t\t<span class="token keyword">from</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\tsize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\tpagination<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\treact<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\tand<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"searchbox"</span><span class="token punctuation">,</span> <span class="token string">"ratingsfilter"</span><span class="token punctuation">]</span>\n\t\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\tonData<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\t<span class="token keyword">return</span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\t\timage<span class="token punctuation">:</span> <span class="token string">"https://www.enterprise.com/content/dam/global-vehicle-images/cars/FORD_FOCU_2012-1.png"</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\ttitle<span class="token punctuation">:</span> res<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\t\tdescription<span class="token punctuation">:</span> res<span class="token punctuation">.</span>brand <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token string">"★"</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>rating<span class="token punctuation">)</span>\n\t\t\t\t\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t\tstyle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n\t\t\t\t\t\t\t\twidth<span class="token punctuation">:</span> <span class="token string">"60%"</span><span class="token punctuation">,</span>\n\t\t\t\t\t\t\t\ttextAlign<span class="token punctuation">:</span> <span class="token string">"center"</span>\n\t\t\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\t\t\t\t\t\t<span class="token operator">/</span><span class="token operator">></span>\n\t\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\t\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ReactiveBase</span><span class="token punctuation">></span></span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>If you have followed along, this is how our app should look now.</p>\n<p><img src="https://i.imgur.com/oZglt8L.png"></p>\n<p>For convenience, you can checkout the final code from the ReactiveSearch starter github repo - <a href="https://github.com/appbaseio-apps/reactivesearch-starter-app">https://github.com/appbaseio-apps/reactivesearch-starter-app</a>.</p>\n<p>You can run it with the following commands:</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code><span class="token function">git</span> clone https://github.com/appbaseio-apps/reactivesearch-starter-app\n<span class="token function">cd</span> reactivesearch-starter-app\nyarn <span class="token operator">&amp;&amp;</span> yarn start\n<span class="token comment"># open http://localhost:3000 and you should see the app.</span>\n<span class="token comment"># The magic sauce is inside **src/App.js** file.</span>\n</code></pre>\n      </div>\n<hr>\n<h3 id="step-5-reactivesearch-as-umd"><a href="#step-5-reactivesearch-as-umd" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Step 5: ReactiveSearch as UMD</h3>\n<p>It is also possible to run ReactiveSearch without relying on a Node.JS environment tooling for the build setup. Here, I am using <code>v2.0.0</code>, this can be replaced with the version you are using.</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.rawgit.com/appbaseio/reactivesearch/v2.0.0/packages/web/umd/reactivesearch.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>A GZip version (131KB in size) is also available at <a href="https://cdn.rawgit.com/appbaseio/reactivesearch/v2.0.0/packages/web/umd/reactivesearch.js.gzip">https://cdn.rawgit.com/appbaseio/reactivesearch/v2.0.0/packages/web/umd/reactivesearch.js.gzip</a>.</p>\n<p>The ReactiveSearch starter project has also been built with the UMD version of the lib, and is available at <a href="https://github.com/appbaseio-apps/reactivesearch-starter-app/tree/umd">https://github.com/appbaseio-apps/reactivesearch-starter-app/tree/umd</a>.</p>\n<p>You can run it with the following commands:</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code><span class="token function">git</span> clone https://github.com/appbaseio-apps/reactivesearch-starter-app\n<span class="token function">cd</span> reactivesearch-starter-app\n<span class="token function">git</span> checkout umd    <span class="token comment"># where we have the umd version of the starter app</span>\npython -m SimpleHTTPServer 1234   <span class="token comment"># now open http://localhost:1234</span>\n</code></pre>\n      </div>\n<hr>',
frontmatter:{title:"ReactiveSearch Quickstart",next:"getting-started/data.html",prev:null,nextTitle:"Importing Data",prevTitle:null},fields:{path:"getting-started/reactivesearch.md",slug:"getting-started/reactivesearch.html"}}},pathContext:{slug:"getting-started/reactivesearch.html"}}}});
//# sourceMappingURL=path---getting-started-reactivesearch-html-fa1b19c751616412f7b8.js.map